set(3DPARTY_FOLDER ext)

function(set_ide_folder target_name folder_name)
    if (TARGET ${target_name})
        set_target_properties(${target_name} PROPERTIES FOLDER ${folder_name})
    endif()
endfunction()

if (MESH_LOADER STREQUAL "Assimp")
    if (NOT TARGET assimp)
        set(ASSIMP_FOLDER ${3DPARTY_FOLDER}/assimp)
        set(ASSIMP_BUILD_OBJ_IMPORTER ON)
        set(ASSIMP_DOUBLE_PRECISION ON)
        set(ASSIMP_WARNINGS_AS_ERRORS OFF)
        set(ASSIMP_BUILD_ASSIMP_TOOLS OFF)
        set(ASSIMP_BUILD_TESTS OFF)
        set(ASSIMP_INSTALL OFF)
        add_subdirectory(assimp)
        set_target_properties(assimp PROPERTIES DEBUG_POSTFIX "_d")
        set_target_properties(assimp PROPERTIES RELEASE_POSTFIX "_r")

        set_ide_folder(assimp ${ASSIMP_FOLDER})
        set_ide_folder(UpdateAssimpLibsDebugSymbolsAndDLLs ${ASSIMP_FOLDER})
        set_ide_folder(zlibstatic ${ASSIMP_FOLDER})
    endif()
elseif (MESH_LOADER STREQUAL "Tinyobjloader")
    if (NOT TARGET tinyobjloader)
        add_subdirectory(tinyobjloader)
        set_ide_folder(tinyobjloader ${3DPARTY_FOLDER}/tinyobjloader)
        set_ide_folder(uninstall ${3DPARTY_FOLDER}/tinyobjloader)
    endif()
else()
    message(FATAL_ERROR "Unknown mesh loader!!")
endif()

if (NOT TARGET embree)
    set(EMBREE_FOLDER ${3DPARTY_FOLDER}/embree)
    if(EMBREE_USE_TBB)
        set(EMBREE_TASKING_SYSTEM TBB)
    else()
        if(WIN32)
            set(EMBREE_TASKING_SYSTEM PPL)
        else()
            set(EMBREE_TASKING_SYSTEM INTERNAL)
        endif()
    endif()

    add_subdirectory(embree3)
    set_target_properties(embree PROPERTIES DEBUG_POSTFIX "_d")
    set_target_properties(embree PROPERTIES RELEASE_POSTFIX "_r")

    set_ide_folder(embree ${EMBREE_FOLDER})
    set_ide_folder(lexers ${EMBREE_FOLDER}/common)
    set_ide_folder(math ${EMBREE_FOLDER}/common)
    set_ide_folder(simd ${EMBREE_FOLDER}/common)
    set_ide_folder(sys ${EMBREE_FOLDER}/common)
    set_ide_folder(tasking ${EMBREE_FOLDER}/common)
    set_ide_folder(embree_avx ${EMBREE_FOLDER}/kernels)
    set_ide_folder(embree_avx2 ${EMBREE_FOLDER}/kernels)
    set_ide_folder(embree_sse42 ${EMBREE_FOLDER}/kernels)
endif()

